#!/usr/bin/env perl

# quickpik image viewer, copyright brian duggan 2010, GPL

use Mojolicious::Lite;
use Mojo::ByteStream qw/b/;
use IO::Dir;
use Image::Scale;
use File::Spec;
use File::Path qw/mkpath/;

plugin 'json_config';
plugin 'basic_auth';

app->types->type(JPG => "image/jpeg");

sub _check_user_pw {
    my ($c, $user,$pw) = @_;
    my $conf = $c->stash("config");
    return 0 unless $user && $pw && $conf->{$user} && $conf->{$user}{pw} eq $pw;
    $c->stash(user => $user);
    $c->stash(dirs => $conf->{$user}{dirs});
    return 1;
}

under sub {
    my $c = shift;
    unless ($c->basic_auth( photos => sub { _check_user_pw($c,@_) } )) {
        $c->render(text => 'incorrect user/password');
        return;
    }
    return 1;
};

get '/:dirindex' => [ dirindex => qr/\d+/ ] => { dirindex => 0 } => sub {
    my $c = shift;
    my $dirs = $c->stash("dirs");
    my $dir = $dirs->[ $c->stash("dirindex") ];
    app->log->debug("listing files in $dir");
    tie my %dir, 'IO::Dir', $dir;
    $c->stash(dir => { %dir });
} => 'index';

get '/download/:dirindex/(.file)' => { dirindex => 0 } =>  sub {
    my $c = shift;
    my $file = $c->stash("file");
    my $dir = $c->stash("dirs")->[ $c->stash("dirindex") ];
    app->log->debug("serving $file");
    app->static->root($dir);
    app->static->serve($c,$c->stash("file"));
    $c->rendered;
} => 'download';

get '/thumbnail/:dirindex/(.file)' => { dirindex => 0 } => sub {
    my $c = shift;
    my $dir = $c->stash("dirs")->[ $c->stash("dirindex") ];
    my $thumbbase = $c->stash("config")->{thumb_dir};
    my $thumbdir = File::Spec->canonpath(File::Spec->catdir($thumbbase, $dir));
    mkpath $thumbdir;
    my $file = $c->stash("file");
    my $tfile = "$thumbdir/thumb_$file";
    unless (-e "$tfile") {
        my $i = Image::Scale->new("$dir/$file") or die "could not read $dir/$file";
        $i->resize_gm_fixed_point({ width => 256 } );
        $i->save_jpeg("$tfile");
    }
    app->log->debug("serving thumbnail $tfile");
    app->static->root($thumbdir);
    app->static->serve($c,"thumb_$file");
    $c->rendered;
} => 'thumb';

app->start;
__DATA__

@@ index.html.ep
% layout 'default';
<table class='nav'><tr>
% for my $i (1..$#$dirs) {
<td>
% my ($label) = $dirs->[$i] =~ /\/([^\/]*)$/;
%= link_to 'index' => {dirindex => $i} => ( title => "$label" ) => begin
<%== $i==$dirindex ? "&#x25BC;" : "&#x25BD;" =%>
% end
</td>
% }
</tr></table>
% for my $k (sort keys %$dir) {
% next if $k =~ /^\./;
% next unless $k =~ /jpg$/i;
<div class="img shadow">
%= link_to 'download' => {file => $k, dirindex => $dirindex} => begin
<img alt="<%= $k =%>" title="<%= $k =%>" src='<%= url_for(thumb => {file => $k, dirindex => $dirindex})  =%>'>
%= end
    <div class="desc">
    <%= $k =%>
    </div>
</div>
% }

@@ layouts/default.html.ep
%# thanks: http://www.w3schools.com/CSS/css_image_gallery.asp
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head>
<%= stylesheet 'quickpik.css' =%>
</head>
<body>
<%= content =%>
</body>
</html>

@@ quickpik.css
body {
    background:#dcdca0;
    font-family:sans-serif;
    font-size:8pt;
}
table.nav {
  border-collapse;collapse;
  border-top: 1px solid #20201E;
  border-bottom: 1px solid #20201E;
  background-color:transparent;
  border-collapse:collapse;
  width:100%;
  }
table.nav tr td {
  color:#20201E;
  text-align:center;
  border-left: 1px solid #20201E;
  border-right: 1px solid #20201E;
}
table.nav tr td:hover {
  background-color:white;
}
table.nav tr td a {
  color:inherit;
  }
div.img
  {
  -moz-border-radius:3px;
  border-radius:3px;
  margin:2px;
  height:auto;
  width:auto;
  float:left;
  text-align:center;
  background-color:#baba80;
  border:1px solid #a5afaa;
  }
div.img img
  {
  display:inline;
  margin:3px;
  border:1px solid #20201E;
  }
div.img a:hover img
  {
  border:1px solid #0000ff;
  }
div.desc
  {
  text-align:center;
  font-weight:normal;
  width:120px;
  margin:2px;
  }

a {
    text-decoration:none;
}
.shadow {
    -moz-box-shadow: 3px 3px 4px #050f0a;
    -webkit-box-shadow: 3px 3px 4px #050f0a;
    box-shadow: 3px 3px 4px #050f0a;
}


